use Mix.Config

# For production, we configure the host to read the PORT
# from the system environment. Therefore, you will need
# to set PORT=80 before running your server.
#
# You should also configure the url host to something
# meaningful, we use this information when generating URLs.
#
# Finally, we also include the path to a manifest
# containing the digested version of static files. This
# manifest is generated by the mix phoenix.digest task
# which you typically run after static files are built.
config :scone_home_elixir, SconeHomeElixir.Endpoint,
  http: [port: {:system, "PORT"}],
  #url: [host: "example.com", port: 80],
  #url: [scheme: "https", host: "scone-home-elixir.herokuapp.com", port: 443],
	#	force_ssl: [rewrite_on: [:x_forwarded_proto]],
  url: [scheme: "https", host: "sconely.herokuapp.com", port: 443],
		force_ssl: [rewrite_on: [:x_forwarded_proto]],
  cache_static_manifest: "priv/static/manifest.json",
  secret_key_base: System.get_env("SECRET_KEY_BASE")



#database-local
config :scone_home_elixir, SconeHomeElixir.Repo,
  adapter: Ecto.Adapters.Postgres,
  #url: "postgres://postgres@localhost/sconely_dev"
  #url: "postgres://zokuppiwdnddjg:C8ipdqtvZ2vB8et-xPDVot87ij@ec2-54-163-240-101.compute-1.amazonaws.com:5432/d72tdu152l44hp"
  #url: "postgres://rqzuituwviprbp:d7b644fdd03e377a1ca7318849c4a631242b78496bd0d6f87847aad3ab46316d@ec2-54-83-205-71.compute-1.amazonaws.com:5432/d68qdnh6v3kbvs"

  #heroku sconely-test
  url: "postgres://astyunkagqyjlt:6971339b540d713daaf77b6875476354ad6185131bc9cafa6667795437216185@ec2-107-20-186-238.compute-1.amazonaws.com:5432/dp60dnefin9ht",
  ssl: true




  #heroku-sconely-prod
  #url: "postgres://tisbfgptmbcsua:021ce0c0c137bd1f8d3e08749daedaa59845b9bc4bf5825cae9f3ac11178b720@ec2-184-73-189-221.compute-1.amazonaws.com:5432/d3n1ikvdskts5t",
  #ssl: true



#for sconely-test
config :stripe, :secret_key, "sk_test_ClIoWCLD5awvN9uqiZIqzI78"

#sconely-production
#config :stripe, :secret_key, "sk_live_V4rKgMKdlpl3CwUHHMLH0h1K"





# Do not print debug messages in production
config :logger, level: :info

# ## SSL Support
#
# To get SSL working, you will need to add the `https` key
# to the previous section and set your `:url` port to 443:
#
#     config :scone_home_elixir, SconeHomeElixir.Endpoint,
#       ...
#       url: [host: "example.com", port: 443],
#       https: [port: 443,
#               keyfile: System.get_env("SOME_APP_SSL_KEY_PATH"),
#               certfile: System.get_env("SOME_APP_SSL_CERT_PATH")]
#
# Where those two env variables return an absolute path to
# the key and cert in disk or a relative path inside priv,
# for example "priv/ssl/server.key".
#
# We also recommend setting `force_ssl`, ensuring no data is
# ever sent via http, always redirecting to https:
#
#     config :scone_home_elixir, SconeHomeElixir.Endpoint,
#       force_ssl: [hsts: true]
#
# Check `Plug.SSL` for all available options in `force_ssl`.

# ## Using releases
#
# If you are doing OTP releases, you need to instruct Phoenix
# to start the server for all endpoints:
#
#     config :phoenix, :serve_endpoints, true
#
# Alternatively, you can configure exactly which server to
# start per endpoint:
#
#     config :scone_home_elixir, SconeHomeElixir.Endpoint, server: true
#

# Finally import the config/prod.secret.exs
# which should be versioned separately.
#import_config "prod.secret.exs"
