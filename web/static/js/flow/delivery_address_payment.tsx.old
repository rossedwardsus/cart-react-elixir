'use strict'

import * as React from 'react'
import { Link, browserHistory } from 'react-router'
//import Autocomplete as any from 'react-google-autocomplete';
//import Dialog from "rc-dialog";
//let Autocomplete = require('react-google-autocomplete');
//const Autocomplete = Autocomplete: any;
var DatePicker = require('react-datepicker');
var moment = require('moment');

require('react-datepicker/dist/react-datepicker.css');

//declare module 'react-google-autocomplete' {
//    const x: any;
//    export = x; 
//}

//type Props = {
  //title: string,
  //visited: boolean,
//  addDeliveryAddress: () => void,
//};

export default class DeliveryAddressPayment extends React.Component<any, any> {
  props: any;
  state: any;

  constructor(props: any) {
    super(props);
    //this.getData();
  
    //alert("sconely yours1" + this.props.params.order_id);

    //state: {
      //display: 'static' | 'hover' | 'active',
    //};

    this.state = {

        first_name: "",
        last_name: "",
        email: "",
        mobile: "",
        business_name: "",
        delivery_addresses: [{street: "santa monica blvd"}],
        street: "",
        city: "",
        state: "",
        zipcode: "",
        startDate: moment(),
        form_inputs_validated: false,
        first_name_classname: "form-group has-error",
        first_name_validated: false,
        last_name_classname: "form-group has-error",
        last_name_validated: false,
        contact_email_classname: "form-group has-error", 
        contact_email_validated: false,
        contact_mobile_classname: "form-group has-error",
        comtact_mobile_validated: false,
        name_on_card: "form-group has-error",

    };

    this.completeOrder = this.completeOrder.bind(this);
    this.setDeliveryAddressStreet = this.setDeliveryAddressStreet.bind(this);
  }
   
  /*<Autocomplete
                    style={{width: '90%'}}
                    onPlaceSelected={(place: any) => {
                      //console.log(place.formatted_address.split(",")[2]);
                      //this.props.setDeliveryAddress(place); 
                    }}
                    types={['address']}
                    componentRestrictions={{country: "us"}}
                  />*/


  completeOrder(){

      alert();

  }

  setFirstName(e: any){

      if(e.target.value.length > 0){

        //alert();

        if(/^[a-zA-Z]/.test(e.target.value)){

            //alert();

            this.setState({"first_name": e.target.value});
            this.setState({"first_name_classname": "form-group"});
            this.setState({"first_name_validated": true});

        }
      }      
  }

  setLastName(e: any){

      if(e.target.value.length > 0){

        //alert();

        if(/^[a-zA-Z]/.test(e.target.value)){

            //alert();

            this.setState({"last_name": e.target.value});
            this.setState({"last_name_classname": "form-group"});
            this.setState({"last_name_validated": true});

        }
      }
  }

  setContactEmail(e: any){

      if(e.target.value.length > 0){

        //alert();

        //var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        //return re.test(email);

        if((/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/).test(e.target.value)){

            //alert();

            this.setState({"contact_email": e.target.value});
            this.setState({"contact_email_classname": "form-group"});
            this.setState({"contact_email_validated": true});

        }
      }   
  }

  setContactMobile(e: any){

      if(e.target.value.length > 0){

        //alert();

        if(/^[a-zA-Z]/.test(e.target.value)){

            //alert();

            this.setState({"first_name": e.target.value});
            this.setState({"first_name_classname": "form-group"});

        }
      }   
  }

  setDeliveryAddressStreet(e: any){

    alert(e.target.value);

  }



  /*cart = this.props.order.toJS().cart.map(function(item: any, index: any){

                      //let menu_item_title_index = menu_items.findIndex where item_id == item_item_id
                      let result = this.state.menu_items.find(function(obj: any){return obj.get('item_id') === 1;});
                      let item_title = result.get("title");

                      if(item.mini == true){
                      
                          return(<div><div className="col-md-1">image</div><div className="col-md-1">{item_title}</div><div className="col-md-1">{item.quantity} Dozen</div><div className="col-md-1">Mini</div><div className="col-md-1">{item.quantity}</div><div className="col-md-1">cost</div></div>)

                      }else{

                          return(<div><div className="col-md-1">image</div><div className="col-md-1">{item_title}</div><div className="col-md-1">{item.quantity} Dozen</div><div className="col-md-1"></div><div className="col-md-1">{item.quantity}</div></div>)

                      }
                  
                }.bind(this))*/



  render(): JSX.Element {

    let { setFirstName, setContactEmail, setDeliveryAddressStreet, setDeliveryAddressCity, setDeliveryAddressZipcode, setCardNumber, setExpiryDate, setSecurityCode } = this.props;


    /*<Autocomplete
                    style={{width: '90%'}}
                    onPlaceSelected={(place) => {
                      //console.log(place.formatted_address.split(",")[2]);
                      this.props.setDeliveryAddress(place); 
                    }}
                    types={['address']}
                    componentRestrictions={{country: "us"}}
                />*/
//AIzaSyAuVR15rb8d2QgfDsZUD5b6kNhnV-mF4wk

        return (
          <div>
              
              <form className="form-inline">
                <div className="form-group">
                  <div className="col-sm-12">
                      <b>Delivery Date and Time</b>
                  </div>
                </div>
              </form>
              <form className="form-inline">
                  <div className="col-md-2">
                    <DatePicker
                      selected={this.state.startDate}
                      onChange={() => {}} />
                  </div>
                  <div className="col-md-2">
                    <select className="form-control" id="exampleInputEmail2">
                        <option>9:00 am - 11:00 am</option>
                        <option>1:00 pm - 3:00 pm</option>
                    </select>
                  </div>
                  <div className="col-md-2">
                    <label htmlFor="exampleInputEmail2">(free)</label>
                  </div>
                <div className="form-group">
                  <div className="col-md-4">
                      <select className="form-control">
                          <option>9:00</option>
                          <option>9:30</option>
                          <option>10:00</option>
                          <option>10:30</option>
                          <option>11:00</option>
                          <option>11:30</option>
                          <option>12:00</option>
                          <option>12:30</option>
                      </select>
                      <label htmlFor="exampleInputEmail2">($2 extra)</label>
                  </div>
                </div>
              </form>
              <form className="form-horizontal">
                <div className="form-group">
                  <div className="col-sm-8">
                      <b>Name</b>
                      <br/>
                  </div>
                </div>
              </form>
              <form className="form-inline">
                <div className={this.state.first_name_classname}>
                  <input type="text" onChange={(e: any) => this.setFirstName(e)} className="form-control" id="exampleInputName2" placeholder="First Name"/>
                </div>
                <div className={this.state.last_name_classname}>
                  <input type="text" onChange={(e: any) => this.setLastName(e)} className="form-control" id="exampleInputName2" placeholder="Last Name"/>
                </div>
              </form>
              <form className="form-inline">
                <div className="form-group">
                  <input type="text" onChange={(e: any) => setDeliveryAddressStreet(e)} className="form-control" id="exampleInputName2" placeholder="Company Name"/>
                </div>
              </form>
              <br/>
              <form className="form-horizontal">
                <div className="form-group">
                  <div className="col-sm-8">
                      <b>Address-if logged in</b>
                      <br/>
                      {true &&
                        <select className="form-control">
                            <option>Home</option>
                            <option>Office</option>
                        </select>
                      }
                      <br/>
                  </div>
                </div>
              </form>
              <form className="form-inline">
                <div className="form-group">
                  <input type="text" onChange={(e: any) => setDeliveryAddressStreet(e)} className="form-control" id="exampleInputName2" placeholder="Street"/>
                </div>
                <div className="form-group">
                  <input type="text" onChange={(e: any) => setDeliveryAddressStreet(e)} className="form-control" id="exampleInputName2" placeholder="Street 2"/>
                </div>
              </form>
              <form className="form-inline">
                <div className="form-group">
                  <select className="form-control">
                      <option>Los Angeles</option>
                  </select>
                </div>
                <div className="form-group">
                  <select className="form-control">
                      <option>CA</option>
                  </select>
                </div>
                <div className="form-group">
                  <select className="form-control">
                      <option>90025</option>
                      <option>1-3</option>
                      <option>3</option>
                      <option>4</option>
                      <option>5</option>
                  </select>
                </div>
              </form>
              <br/>
              <form className="form-horizontal">
                <div className="form-group">
                  <div className="col-sm-10">
                      <b>Contact</b>
                      <br/>
                  </div>
                </div>
              </form>
              <form className="form-inline">
                <div className={this.state.contact_email_classname}>
                  <input type="text" onChange={(e: any) => this.setContactEmail(e)} className="form-control" id="exampleInputName2" placeholder="Email"/>
                </div>
                <div className={this.state.contact_mobile_classname}>
                  <input type="text" onChange={(e: any) => this.setContactMobile(e)} className="form-control" id="exampleInputName2" placeholder="Mobile"/>
                </div>
              </form> 
              <br/>
              <form className="form-horizontal">
                <div className="form-group">
                  <div className="col-sm-10">
                      <b>Cart Items</b>
                      <br/>
                      <br/>
                      <b>Total Due</b>
                      <br/>
                  </div>
                </div>
              </form>
              <form className="form-inline">
              <div className="form-group">
                  <input type="text" className="form-control" id="exampleInputName2" placeholder="Name on Card"/>
                </div>
              </form>
              <form className="form-inline">
                <div className="form-group">
                  <input type="text" className="form-control" id="exampleInputName2" placeholder="Card Number"/>
                </div>
                <div className="form-group">
                  <input type="text" className="form-control" id="exampleInputName2" placeholder="Expiration Date"/>
                </div>
                <div className="form-group">
                  <input type="email" className="form-control" id="exampleInputEmail2" placeholder="Security Code"/>
                </div>
              </form>
              <button onClick={() => this.completeOrder()}>Complete Order</button>
          </div>
    )
  }
}