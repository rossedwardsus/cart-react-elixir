<link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/latest/css/bootstrap.min.css">
<link rel="stylesheet" type="text/css" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script type='text/javascript' src='https://code.jquery.com/jquery-2.1.4.min.js'></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
<script src="https://fb.me/react-15.0.0.js"></script>
<script src="https://fb.me/react-dom-15.0.0.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/babel-core/5.8.34/browser.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/4.3.0/dropzone.js"></script>


<html>
	<body>
		<div id="root"></div>
	</body>
</html>


<script type="text/babel">

  

    class EditItem extends React.Component {
    //- - - - - - ^ - the magic happens here

        constructor(props) {
          super(props);
          // bind it and make it an instance method instead of prototype method
          //this.myFunction = this.myFunction.bind(this);
          //alert();
          this.state = {
            cart: 0
          }

          this.addItem = this.addItem.bind(this);

        }
        addItem() {
          // this
          //alert();
          var cart = this.state.cart;
          this.setState({cart: cart + 1});
        }
        //componentDidMount() {
          //SomeEvent.subscribe(this.myFunction);
        //  alert();
        //},
        //componentWillUnmount() {
          //SomeEvent.unsubscribe(this.myFunction);
        //}

        render() {

          var cart = this.state.cart;

          return (
              <div>
              cart-add more items
              </div>
          )

        }
    }

    class AddItem extends React.Component {
    //- - - - - - ^ - the magic happens here

        constructor(props) {
          super(props);
          // bind it and make it an instance method instead of prototype method
          //this.myFunction = this.myFunction.bind(this);
          //alert();
          this.state = {
            cart: 0
          }

          this.addItem = this.addItem.bind(this);
          //this.getToken = this.getToken.bind(this);

        }
        addItem() {
          // this
          //alert();
          var cart = this.state.cart;
          this.setState({cart: cart + 1});
        }
        componentDidMount() {
          //SomeEvent.subscribe(this.myFunction);
          alert("add item");
        }
        onDrop(){

		      var req = request.post('/upload');
		      files.forEach((file)=> {
		          req.attach(file.name, file);
		      });
		      req.end(callback);

		      /*files.forEach((file)=> {
		            //alert(JSON.stringify(file.getAsText("utf-8")));
		            //req.attach(file.name, file);
		            reader.onload = function(e) {
		                // e.target.result should contain the text
		                //alert(e.target.result);
		                alert(e.target.result.split(",")[0]);
		                //e.target.result.map(function(guest){

		                  //  guest_list.push(guest);

		                //})
		                this.setState({guest_list: guest_list});
		            };
		            reader.readAsText(file);
		      });*/

		}
  
		  render(){

		  		    return(<div>
		                    <br/>
		                    <br/>
		                    description-textarea<input/>
		                    <br/>
		                    category-select<select onChange={this.categoryChange}><option value=""></option><option value="scone">Scone</option><option value="tea">Tea</option><option value="assortment">Assortment</option></select>
		                    <br/>
		                    <br/>
		                    add photo
		                    <br/>
		                    <Dropzone onDrop={this.onDrop}>
		                      <div>Try dropping some files here, or click to select files to upload.</div>
		                    </Dropzone>
		                    <br/>
		                    <button type="button" onClick={this.onOpenClick}>
		                    Open Dropzone
		                    </button>
		                    {this.state.files.length > 0 ? <div>
		                    <h2>Uploading {this.state.files.length} files...</h2>
		                    <div>{this.state.files.map((file) => <img src={file.preview} /> )}</div>
		                    </div> : null}
		                    <br/>
		                    <Button>Save</Button>
		          </div>);
		  }

    }

    class Orders extends React.Component {
    //- - - - - - ^ - the magic happens here

        constructor(props) {
          super(props);
          // bind it and make it an instance method instead of prototype method
          //this.myFunction = this.myFunction.bind(this);
          alert("orders");
          this.state = {
            cart: 0
          }

          this.addItem = this.addItem.bind(this);

        }
        addItem() {
          // this
          //alert();
          //var cart = this.state.cart;
          //this.setState({cart: cart + 1});
        }
        componentDidMount() {
          //SomeEvent.subscribe(this.myFunction);
          //alert("orders");

        }
        //componentWillUnmount() {
          //SomeEvent.unsubscribe(this.myFunction);
        //}

        render() {

          var cart = this.state.cart;

          return (
              <div>
                Choose from existing address
                <br/>
                Or add new one
                <br/>
                Name
                <br/>
                <form method="post" onSubmit={this.handleSubmit}>
                    <div class="form-group">
                      <label for="cc-number" class="control-label">Address</label>
                      <input id="cc-number" type="tel" class="input-lg form-control cc-number" autocomplete="cc-number" placeholder="•••• •••• •••• ••••" required/>
                    </div>

                    <div class="form-group">
                      <label for="cc-exp" class="control-label">Box</label>
                      <input id="cc-exp" type="tel" class="input-lg form-control cc-exp" autocomplete="cc-exp" placeholder="•• / ••" required/>
                    </div>

                    <div class="form-group">
                      <label for="cc-cvc" class="control-label">City</label>
                      <input id="cc-cvc" type="tel" class="input-lg form-control cc-cvc" autocomplete="off" placeholder="•••" required/>
                    </div>

                    <div class="form-group">
                      <label for="numeric" class="control-label">State</label>
                      <input id="numeric" type="tel" class="input-lg form-control" data-numeric/>
                    </div>

                    <h2 class="validation"></h2>
                </form>
              </div>
          )

        }
    }

    class Admin extends React.Component {
    //- - - - - - ^ - the magic happens here

        constructor(props) {
          super(props);
          // bind it and make it an instance method instead of prototype method
          //this.myFunction = this.myFunction.bind(this);
          //alert();
          this.state = {
            page: "",
          }

         }
        componentDidMount(){

            //alert("admin");

         }

        addItem(){

        	this.setState({page: "add_item"});

        }

        render(){

        	var page = "";

          	if(this.state.page == ""){

          		page = <Orders/>;

          	}else if(this.state.page == "add_item"){


          		page = <AddItem/>;

          	}


          	return(<div>
              		<a onClick={this.addItem.bind(this)}>Add item</a>
              		<br/>
              		Edit Item
              		<br/>
              		<br/>
              		Orders
              		<br/>
              		{page}
              </div>);
        }
    };

    ReactDOM.render(
      <Admin/>,
      document.getElementById('root')
    );

    alert();

</script>